{"version":3,"file":"pxblue-ng-progress-icons.js","sources":["ng://@pxblue/ng-progress-icons/lib/pxb-progress-icon.component.ts","ng://@pxblue/ng-progress-icons/lib/utilities.ts","ng://@pxblue/ng-progress-icons/lib/battery/battery.component.ts","ng://@pxblue/ng-progress-icons/lib/heart/heart.component.ts","ng://@pxblue/ng-progress-icons/lib/pie/pie.component.ts","ng://@pxblue/ng-progress-icons/lib/ups/ups.component.ts","ng://@pxblue/ng-progress-icons/lib/ng-progress-icons.module.ts"],"sourcesContent":["import { Component, Input, OnChanges } from '@angular/core';\nimport color from 'color';\n\n@Component({\n    selector: 'pxb-progress-icon',\n    template: `\n        <span\n            class=\"pxb-progress-icon\"\n            [style.flexDirection]=\"getFlexDirection()\"\n            [style.display]=\"labelPosition === 'center' ? '' : 'inline-flex'\"\n        >\n            <span\n                *ngIf=\"showPercentLabel\"\n                class=\"pxb-progress-icon-label\"\n                [class.inverted]=\"inverted\"\n                [class.center]=\"labelPosition === 'center'\"\n                [style.color]=\"labelColor\"\n                [ngStyle]=\"{ '-webkit-text-stroke-width.px': labelPosition === 'center' ? size / 60 : 0 }\"\n                [style.fontSize.px]=\"labelSize || size / 4\"\n                [style.height.px]=\"labelPosition === 'center' ? size : 'unset'\"\n                [style.width.px]=\"labelPosition === 'center' ? size : 'unset'\"\n                [style.lineHeight.px]=\"labelPosition === 'top' || labelPosition === 'bottom' ? 'unset' : size\"\n                [style.webkitTextStrokeColor]=\"getStrokeColor()\"\n                [style.webkitTextFillColor]=\"labelColor\"\n                >{{ percent }}%</span\n            >\n            <ng-content></ng-content>\n        </span>\n    `,\n    styleUrls: ['./pxb-progress-icon.scss'],\n})\nexport class PxbProgressIconComponent implements OnChanges {\n    @Input() size = 24;\n    @Input() percent = 100;\n    @Input() showPercentLabel = false;\n    @Input() labelPosition: 'top' | 'bottom' | 'left' | 'right' | 'center' = 'center';\n    @Input() color: string;\n    @Input() labelColor: string;\n    @Input() labelSize: number;\n    @Input() backgroundColor: string;\n\n    inverted: boolean;\n\n    ngOnChanges(): void {\n        if (color) {\n            // Inverted class applies only to center-aligned label.\n            this.inverted = this.labelPosition === 'center' && color(this.color).isDark();\n        }\n    }\n\n    getStrokeColor(): string {\n        if (this.labelPosition === 'center' && this.labelColor && color) {\n            return color(this.labelColor).isDark() ? 'white' : 'black';\n        }\n        return '';\n    }\n\n    getFlexDirection(): string {\n        switch (this.labelPosition) {\n            case 'left':\n                return 'row';\n            case 'right':\n                return 'row-reverse';\n            case 'top':\n                return 'column';\n            case 'bottom':\n                return 'column-reverse';\n            default:\n                return '';\n        }\n    }\n}\n","export const rangeValue = function (value: number, min: number, max: number): number {\n    return Math.max(min, Math.min(value, max));\n};\n\nexport const getCoordinates = function (percent: number, radius = 12): { x: number; y: number } {\n    return {\n        x: radius + radius * Math.cos((percent / 100) * 2 * Math.PI),\n        y: radius + radius * Math.sin((percent / 100) * 2 * Math.PI),\n    };\n};\n","import { Component, OnChanges, Input } from '@angular/core';\nimport { PxbProgressIconComponent } from '../pxb-progress-icon.component';\nimport { rangeValue } from '../utilities';\n\n@Component({\n    selector: 'battery-progress',\n    template: `\n        <pxb-progress-icon\n            [size]=\"size\"\n            [labelPosition]=\"labelPosition\"\n            [percent]=\"percent\"\n            [showPercentLabel]=\"showPercentLabel\"\n            [labelColor]=\"labelColor\"\n            [labelSize]=\"labelSize\"\n            [color]=\"color\"\n        >\n            <svg\n                [attr.height]=\"size + 'px'\"\n                [attr.width]=\"size + 'px'\"\n                x=\"0px\"\n                y=\"0px\"\n                viewBox=\"0 0 24 24\"\n                style=\"enable-background:new 0 0 24 24;\"\n                xml:space=\"preserve\"\n            >\n                <defs>\n                    <mask *ngIf=\"outlined\" [attr.id]=\"maskIDleft\">\n                        <rect width=\"100%\" height=\"100%\" fill=\"white\" />\n                        <polygon fill=\"black\" points=\"11.5,13 11.5,15 4,11 9.5,11 9.5,9 17,13 \" />\n                    </mask>\n                    <mask *ngIf=\"outlined\" [attr.id]=\"maskIDright\">\n                        <rect width=\"100%\" height=\"100%\" fill=\"white\" />\n                        <rect\n                            [attr.x]=\"startX\"\n                            y=\"7\"\n                            fill=\"black\"\n                            [attr.width]=\"(rv(percent, 0, 100) / 100) * fillWidth\"\n                            height=\"10\"\n                        />\n                    </mask>\n                    <clipPath [id]=\"getID()\">\n                        <path overflow=\"visible\" [attr.d]=\"getClipPath()\" />\n                    </clipPath>\n                </defs>\n                <path\n                    *ngIf=\"backgroundColor\"\n                    [attr.d]=\"basePath\"\n                    [attr.fill]=\"backgroundColor\"\n                    [attr.clip-path]=\"outlined ? undefined : 'url(#' + getID() + ')'\"\n                />\n                <path\n                    [attr.fill]=\"(!outlined && backgroundColor) || color || 'currentColor'\"\n                    [attr.fill-opacity]=\"outlined || percent >= 100 || (!outlined && backgroundColor) ? '1' : '0.3'\"\n                    [attr.clip-path]=\"'url(#' + getID() + ')'\"\n                    [attr.d]=\"getBasePath()\"\n                />\n\n                <g [attr.fill]=\"color || 'currentColor'\">\n                    <rect\n                        [attr.fill]=\"color || 'currentColor'\"\n                        [attr.x]=\"startX\"\n                        y=\"7\"\n                        [attr.clip-path]=\"'url(#' + getID() + ')'\"\n                        [attr.width]=\"(rv(percent, 0, 100) / 100) * fillWidth\"\n                        height=\"10\"\n                        [attr.mask]=\"outlined && charging ? 'url(#' + maskIDleft + ')' : null\"\n                    />\n                    <polygon\n                        *ngIf=\"outlined && charging\"\n                        points=\"11.5,13 11.5,15 4,11 9.5,11 9.5,9 17,13\"\n                        [attr.mask]=\"'url(#' + maskIDright + ')'\"\n                    />\n                </g>\n            </svg>\n        </pxb-progress-icon>\n    `,\n    styleUrls: ['../pxb-progress-icon.scss'],\n})\nexport class BatteryComponent extends PxbProgressIconComponent implements OnChanges {\n    @Input() charging = false;\n    @Input() outlined = false;\n\n    maskIDleft: string;\n    maskIDright: string;\n    startX: number;\n    fillWidth: number;\n\n    rv = rangeValue;\n\n    basePath =\n        'M20,10V8.3C20,7.6,19.4,7,18.7,7H3.3C2.6,7,2,7.6,2,8.3v7.3C2,16.4,2.6,17,3.3,17h15.3c0.7,0,1.3-0.6,1.3-1.3V14h2v-4H20z';\n    chargePath =\n        'M20,10V8.33a1.319,1.319,0,0,0-1-1.263A1.257,1.257,0,0,0,18.67,7H3.34A1.338,1.338,0,0,0,2,8.33v7.33A1.338,1.338,0,0,0,3.33,17H18.67a1.257,1.257,0,0,0,.33-.067,1.319,1.319,0,0,0,1-1.263V14h2V10Zm-8.5,3v2L4,11H9.5V9L17,13Z';\n    outlinedPath =\n        'M18,9v6H4V9H18m.7-2H3.3A1.324,1.324,0,0,0,2,8.3v7.3A1.347,1.347,0,0,0,3.3,17H18.6a1.324,1.324,0,0,0,1.3-1.3V14h2V10H20V8.3A1.324,1.324,0,0,0,18.7,7Z';\n    baseID = 'pxb-battery-clip';\n    chargeID = 'pxb-battery-clip-charge';\n\n    ngOnChanges(): void {\n        this.maskIDleft = `maskLeft-${this.percent}`;\n        this.maskIDright = `maskRight-${this.percent}`;\n\n        this.startX = this.outlined ? 3.9 : 2;\n        this.fillWidth = this.outlined ? 14.2 : 18;\n    }\n\n    getBasePath(): string {\n        return this.outlined ? this.outlinedPath : this.basePath;\n    }\n\n    getClipPath(): string {\n        return this.charging ? this.chargePath : this.basePath;\n    }\n\n    getID(): string {\n        return this.charging ? this.chargeID : this.baseID;\n    }\n}\n","import { Component, OnChanges, Input } from '@angular/core';\nimport { rangeValue } from '../utilities';\nimport { PxbProgressIconComponent } from '../pxb-progress-icon.component';\n\n@Component({\n    selector: 'heart-progress',\n    template: `\n        <pxb-progress-icon\n            [size]=\"size\"\n            [labelPosition]=\"labelPosition\"\n            [percent]=\"percent\"\n            [showPercentLabel]=\"showPercentLabel\"\n            [labelColor]=\"labelColor\"\n            [labelSize]=\"labelSize\"\n            [color]=\"color\"\n        >\n            <svg\n                [attr.height]=\"size + 'px'\"\n                [attr.width]=\"size + 'px'\"\n                x=\"0px\"\n                y=\"0px\"\n                viewBox=\"0 0 24 24\"\n                style=\"enable-background:new 0 0 24 24;\"\n                xml:space=\"preserve\"\n            >\n                <path *ngIf=\"outlined && backgroundColor\" [attr.d]=\"basePath\" [attr.fill]=\"backgroundColor\" />\n                <path\n                    [attr.fill]=\"(!outlined && backgroundColor) || color || 'currentColor'\"\n                    [attr.fill-opacity]=\"outlined || percent >= 100 || (!outlined && backgroundColor) ? '1' : '0.3'\"\n                    [attr.d]=\"getPath()\"\n                />\n                <clipPath id=\"pxb-heart-clip\">\n                    <path\n                        d=\"M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n                    />\n                </clipPath>\n                <rect\n                    [attr.fill]=\"color || 'currentColor'\"\n                    clip-path=\"url(#pxb-heart-clip)\"\n                    x=\"2\"\n                    [attr.y]=\"startY - (rv(percent, 0, 100) * fillHeight) / 100\"\n                    width=\"20\"\n                    height=\"20\"\n                />\n            </svg>\n        </pxb-progress-icon>\n    `,\n    styleUrls: ['../pxb-progress-icon.scss'],\n})\nexport class HeartComponent extends PxbProgressIconComponent implements OnChanges {\n    @Input() outlined = false;\n    startY: number;\n    fillHeight: number;\n    rv = rangeValue;\n\n    basePath =\n        'M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z';\n    outlinedPath =\n        'M16.5,5A3.462,3.462,0,0,1,20,8.5c0,2.885-3.125,5.725-7.856,10.024l-.035.032-.1.094-.124-.113C7.135,14.234,4,11.391,4,8.5A3.462,3.462,0,0,1,7.5,5a3.96,3.96,0,0,1,2.977,1.387L12,8.175l1.523-1.788A3.96,3.96,0,0,1,16.5,5m0-2A5.988,5.988,0,0,0,12,5.09,5.988,5.988,0,0,0,7.5,3,5.447,5.447,0,0,0,2,8.5c0,3.78,3.4,6.86,8.55,11.53L12,21.35l1.45-1.31C18.6,15.36,22,12.28,22,8.5A5.447,5.447,0,0,0,16.5,3Z';\n\n    ngOnChanges(): void {\n        this.startY = this.outlined ? 18.35 : 21.35;\n        this.fillHeight = this.outlined ? 13.35 : 18.35;\n    }\n\n    getPath(): string {\n        return this.outlined ? this.outlinedPath : this.basePath;\n    }\n}\n","import { Component, Input, OnChanges } from '@angular/core';\nimport { rangeValue, getCoordinates } from '../utilities';\nimport { PxbProgressIconComponent } from '../pxb-progress-icon.component';\n\n@Component({\n    selector: 'pie-progress',\n    template: `\n        <pxb-progress-icon\n            [size]=\"size\"\n            [labelPosition]=\"labelPosition\"\n            [percent]=\"percent\"\n            [showPercentLabel]=\"showPercentLabel\"\n            [labelColor]=\"labelColor\"\n            [labelSize]=\"labelSize\"\n            [color]=\"color\"\n        >\n            <svg\n                [attr.height]=\"size + 'px'\"\n                [attr.width]=\"size + 'px'\"\n                x=\"0px\"\n                y=\"0px\"\n                viewBox=\"0 0 24 24\"\n                style=\"transform: rotate(-.25turn)\"\n            >\n                <clipPath [attr.id]=\"'pxb-donut-clip-' + stroke\">\n                    <path [attr.d]=\"clipPath\" />\n                </clipPath>\n                <path\n                    *ngIf=\"outlined && backgroundColor\"\n                    [attr.d]=\"twoToneBase\"\n                    [attr.clip-path]=\"'url(#pxb-donut-clip-' + stroke + ')'\"\n                    [attr.fill]=\"backgroundColor\"\n                />\n                <path\n                    [attr.clip-path]=\"'url(#pxb-donut-clip-' + stroke + ')'\"\n                    [attr.fill]=\"(!outlined && backgroundColor) || color || 'currentColor'\"\n                    [attr.fill-opacity]=\"outlined || percent >= 100 || (!outlined && backgroundColor) ? '1' : '0.3'\"\n                    [attr.d]=\"outlined ? outlineBase : twoToneBase\"\n                />\n                <path\n                    *ngIf=\"rv(percent, 0, 100) > 0 && rv(percent, 0, 100) < 100\"\n                    [attr.fill]=\"color || 'currentColor'\"\n                    [attr.clip-path]=\"'url(#pxb-donut-clip-' + stroke + ')'\"\n                    [attr.d]=\"getPath()\"\n                />\n\n                <circle\n                    *ngIf=\"rv(percent, 0, 100) === 100 && outlined\"\n                    [attr.clip-path]=\"'url(#pxb-donut-clip-' + stroke + ')'\"\n                    cx=\"12\"\n                    cy=\"12\"\n                    r=\"10\"\n                    [attr.fill]=\"color || 'currentColor'\"\n                ></circle>\n            </svg>\n        </pxb-progress-icon>\n    `,\n    styleUrls: ['../pxb-progress-icon.scss'],\n})\nexport class PieComponent extends PxbProgressIconComponent implements OnChanges {\n    @Input() ring = 10;\n    @Input() outlined = false;\n\n    rv = rangeValue;\n\n    outlineBase: string;\n    twoToneBase: string;\n    clipPath: string;\n    iconStroke = 2;\n    stroke: number;\n\n    // Ring properties\n    centerX = 12;\n    centerY = 12;\n\n    // Outer ring\n    outerRadiusLarge = 10;\n    innerRadiusLarge: number;\n\n    // Inner Ring\n    outerRadiusSmall: number;\n    innerRadiusSmall: number;\n\n    getPath(): string {\n        return `M 12,12 H 24 A 12,12,0,${this.rv(this.percent, 0, 100) >= 50 ? 1 : 0},1,${\n            getCoordinates(this.rv(this.percent, 0, 100))['x']\n        },${getCoordinates(this.rv(this.percent, 0, 100))['y']}Z`;\n    }\n\n    ngOnChanges(): void {\n        this.stroke = Math.max(1, Math.min(10, Math.round(this.ring)));\n        this.stroke = this.outlined ? Math.max(this.stroke, 2 * this.iconStroke + 1) : this.stroke;\n        this.innerRadiusLarge = 10 - this.iconStroke;\n        this.outerRadiusSmall = 10 - this.stroke + this.iconStroke;\n        this.innerRadiusSmall = 10 - this.stroke;\n        if (this.innerRadiusSmall === 0) {\n            this.outerRadiusSmall = 0;\n        }\n\n        this.outlineBase = `\n  M ${this.centerX} ${this.centerY - this.outerRadiusLarge}\n  A ${this.outerRadiusLarge} ${this.outerRadiusLarge} 0 1 0 ${this.centerX} ${this.centerY + this.outerRadiusLarge}\n  A ${this.outerRadiusLarge} ${this.outerRadiusLarge} 0 1 0 ${this.centerX} ${this.centerY - this.outerRadiusLarge}\n  Z\n  M ${this.centerX} ${this.centerY - this.innerRadiusLarge}\n  A ${this.innerRadiusLarge} ${this.innerRadiusLarge} 0 1 1 ${this.centerX} ${this.centerY + this.innerRadiusLarge}\n  A ${this.innerRadiusLarge} ${this.innerRadiusLarge} 0 1 1 ${this.centerX} ${this.centerY - this.innerRadiusLarge}\n  Z\n  M ${this.centerX} ${this.centerY - this.outerRadiusSmall}\n  A ${this.outerRadiusSmall} ${this.outerRadiusSmall} 0 1 0 ${this.centerX} ${this.centerY + this.outerRadiusSmall}\n  A ${this.outerRadiusSmall} ${this.outerRadiusSmall} 0 1 0 ${this.centerX} ${this.centerY - this.outerRadiusSmall}\n  Z\n  M ${this.centerX} ${this.centerY - this.innerRadiusSmall}\n  A ${this.innerRadiusSmall} ${this.innerRadiusSmall} 0 1 1 ${this.centerX} ${this.centerY + this.innerRadiusSmall}\n  A ${this.innerRadiusSmall} ${this.innerRadiusSmall} 0 1 1 ${this.centerX} ${this.centerY - this.innerRadiusSmall}\n  Z\n`;\n        this.twoToneBase = `\nM ${this.centerX} ${this.centerY - this.outerRadiusLarge}\nA ${this.outerRadiusLarge} ${this.outerRadiusLarge} 0 1 0 ${this.centerX} ${this.centerY + this.outerRadiusLarge}\nA ${this.outerRadiusLarge} ${this.outerRadiusLarge} 0 1 0 ${this.centerX} ${this.centerY - this.outerRadiusLarge}\nZ\n`;\n        this.clipPath = `\nM12,2\nA10,10,0,1,0,22,12,\n10,10,0,0,0,12,2\nZ\nm0,${20 - this.stroke} \nA ${10 - this.stroke},${10 - this.stroke},0,1,1,${22 - this.stroke},12,\n${10 - this.stroke},${10 - this.stroke},0,0,1,12,${22 - this.stroke}\nZ\n`;\n    }\n}\n","import { Component, Input, OnChanges } from '@angular/core';\nimport { rangeValue } from '../utilities';\nimport { PxbProgressIconComponent } from '../pxb-progress-icon.component';\n\n@Component({\n    selector: 'ups-progress',\n    template: `\n        <pxb-progress-icon\n            [size]=\"size\"\n            [labelPosition]=\"labelPosition\"\n            [percent]=\"percent\"\n            [showPercentLabel]=\"showPercentLabel\"\n            [labelColor]=\"labelColor\"\n            [labelSize]=\"labelSize\"\n            [color]=\"color\"\n        >\n            <svg [attr.height]=\"size + 'px'\" [attr.width]=\"size + 'px'\" x=\"0px\" y=\"0px\" viewBox=\"0 0 24 24\">\n                <defs>\n                    <clipPath id=\"outlined-progress-clip\">\n                        <path d=\"M4 8V4H20V8H17V9H20V12H17V13H20V16H17V17H20V20H4V17H7V16H4V13H7V12H4V9H7V8H4Z\" />\n                    </clipPath>\n                    <clipPath [attr.id]=\"'outlined-border-clip-' + rangedPercent\">\n                        <rect x=\"2\" y=\"2\" width=\"20\" [attr.height]=\"startY - 2\" />\n                    </clipPath>\n                </defs>\n\n                <mask\n                    id=\"mask-filled\"\n                    mask-type=\"alpha\"\n                    maskUnits=\"userSpaceOnUse\"\n                    x=\"2\"\n                    y=\"2\"\n                    width=\"20\"\n                    height=\"20\"\n                    *ngIf=\"!outlined\"\n                >\n                    <path [attr.d]=\"basePath\" [attr.fill]=\"color || 'currentColor'\" />\n                </mask>\n                <g mask=\"url(#mask-filled)\" *ngIf=\"!outlined\">\n                    <path\n                        [attr.opacity]=\"backgroundColor ? 1 : 0.3\"\n                        [attr.d]=\"basePath\"\n                        [attr.fill]=\"backgroundColor || color || 'currentColor'\"\n                    />\n                    <rect\n                        x=\"2\"\n                        [attr.y]=\"startY\"\n                        width=\"20\"\n                        [attr.height]=\"fillHeight\"\n                        [attr.fill]=\"color || 'currentColor'\"\n                    />\n                </g>\n\n                <g [attr.fill]=\"color || 'currentColor'\" *ngIf=\"outlined\">\n                    <rect *ngIf=\"backgroundColor\" x=\"4\" y=\"4\" width=\"16\" height=\"16\" [attr.fill]=\"backgroundColor\" />\n                    <path\n                        fill-rule=\"evenodd\"\n                        d=\"M22 4C22 2.89543 21.1046 2 20 2H4C2.89543 2 2 2.89543 2 4V20C2 21.1046 2.89543 22 4 22H20C21.1046 22 22 21.1046 22 20V4ZM4 4V8H7V9H4V12H7V13H4V16H7V17H4V20H20V17H17V16H20V13H17V12H20V9H17V8H20V4H4Z\"\n                        [attr.clip-path]=\"'url(#outlined-border-clip-' + rangedPercent + ')'\"\n                        clip-rule=\"evenodd\"\n                    />\n                    <path\n                        fill-rule=\"evenodd\"\n                        clip-rule=\"evenodd\"\n                        d=\"M4 2C2.89543 2 2 2.89543 2 4V20C2 21.1046 2.89543 22 4 22H20C21.1046 22 22 21.1046 22 20V4C22 2.89543 21.1046 2 20 2H4ZM20 4H4V20H20V4Z\"\n                    />\n                    <rect\n                        x=\"4\"\n                        [attr.y]=\"startY\"\n                        width=\"16\"\n                        [attr.height]=\"fillHeight\"\n                        clip-path=\"url(#outlined-progress-clip)\"\n                    />\n                </g>\n            </svg>\n        </pxb-progress-icon>\n    `,\n    styleUrls: ['../pxb-progress-icon.scss'],\n})\nexport class UpsComponent extends PxbProgressIconComponent implements OnChanges {\n    @Input() outlined = false;\n\n    rangedPercent: number;\n    startY: number;\n    fillHeight: number;\n\n    basePath =\n        'M2 4C2 2.89543 2.89543 2 4 2H20C21.1046 2 22 2.89543 22 4V6H19V8H22V11H19V13H22V16H19V18H22V20C22 21.1046 21.1046 22 20 22H4C2.89543 22 2 21.1046 2 20V18H5V16H2V13H5V11H2V8H5V6H2V4Z';\n\n    ngOnChanges(): void {\n        this.rangedPercent = rangeValue(this.percent, 0, 100);\n        this.startY = this.outlined\n            ? ((100 - this.rangedPercent) / 100) * 16 + 4\n            : ((100 - this.rangedPercent) / 100) * 20 + 2;\n        this.fillHeight = this.outlined ? (this.rangedPercent / 100) * 16 : (this.rangedPercent / 100) * 20;\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BatteryComponent } from './battery/battery.component';\nimport { HeartComponent } from './heart/heart.component';\nimport { PieComponent } from './pie/pie.component';\nimport { PxbProgressIconComponent } from './pxb-progress-icon.component';\nimport { UpsComponent } from './ups/ups.component';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [PxbProgressIconComponent, BatteryComponent, HeartComponent, PieComponent, UpsComponent],\n    exports: [PxbProgressIconComponent, BatteryComponent, HeartComponent, PieComponent, UpsComponent],\n})\nexport class NgProgressIconsModule {}\n"],"names":["tslib_1.__extends"],"mappings":";;;;;;;;;AAAA;IAGA;QA6Ba,SAAI,GAAG,EAAE,CAAC;QACV,YAAO,GAAG,GAAG,CAAC;QACd,qBAAgB,GAAG,KAAK,CAAC;QACzB,kBAAa,GAAmD,QAAQ,CAAC;KAoCrF;;;;IA5BG,8CAAW;;;IAAX;QACI,IAAI,KAAK,EAAE;;YAEP,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,KAAK,QAAQ,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;SACjF;KACJ;;;;IAED,iDAAc;;;IAAd;QACI,IAAI,IAAI,CAAC,aAAa,KAAK,QAAQ,IAAI,IAAI,CAAC,UAAU,IAAI,KAAK,EAAE;YAC7D,OAAO,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,EAAE,GAAG,OAAO,GAAG,OAAO,CAAC;SAC9D;QACD,OAAO,EAAE,CAAC;KACb;;;;IAED,mDAAgB;;;IAAhB;QACI,QAAQ,IAAI,CAAC,aAAa;YACtB,KAAK,MAAM;gBACP,OAAO,KAAK,CAAC;YACjB,KAAK,OAAO;gBACR,OAAO,aAAa,CAAC;YACzB,KAAK,KAAK;gBACN,OAAO,QAAQ,CAAC;YACpB,KAAK,QAAQ;gBACT,OAAO,gBAAgB,CAAC;YAC5B;gBACI,OAAO,EAAE,CAAC;SACjB;KACJ;;gBAnEJ,SAAS,SAAC;oBACP,QAAQ,EAAE,mBAAmB;oBAC7B,QAAQ,EAAE,spCAuBT;;iBAEJ;;;uBAEI,KAAK;0BACL,KAAK;mCACL,KAAK;gCACL,KAAK;wBACL,KAAK;6BACL,KAAK;4BACL,KAAK;kCACL,KAAK;;IAgCV,+BAAC;CApED,IAoEC;;;IAvCG,wCAAmB;;IACnB,2CAAuB;;IACvB,oDAAkC;;IAClC,iDAAkF;;IAClF,yCAAuB;;IACvB,8CAA4B;;IAC5B,6CAA2B;;IAC3B,mDAAiC;;IAEjC,4CAAkB;;;;;;;;ACzCtB,IAAa,UAAU;;;;;;AAAG,UAAU,KAAa,EAAE,GAAW,EAAE,GAAW;IACvE,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;CAC9C,CAAA;;AAED,IAAa,cAAc;;;;;AAAG,UAAU,OAAe,EAAE,MAAW;IAAX,uBAAA,EAAA,WAAW;IAChE,OAAO;QACH,CAAC,EAAE,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;QAC5D,CAAC,EAAE,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;KAC/D,CAAC;CACL,CAAA;;;;;;;ICqEqCA,oCAAwB;IA1E9D;QAAA,qEAiHC;QAtCY,cAAQ,GAAG,KAAK,CAAC;QACjB,cAAQ,GAAG,KAAK,CAAC;QAO1B,QAAE,GAAG,UAAU,CAAC;QAEhB,cAAQ,GACJ,uHAAuH,CAAC;QAC5H,gBAAU,GACN,6NAA6N,CAAC;QAClO,kBAAY,GACR,sJAAsJ,CAAC;QAC3J,YAAM,GAAG,kBAAkB,CAAC;QAC5B,cAAQ,GAAG,yBAAyB,CAAC;;KAqBxC;;;;IAnBG,sCAAW;;;IAAX;QACI,IAAI,CAAC,UAAU,GAAG,cAAY,IAAI,CAAC,OAAS,CAAC;QAC7C,IAAI,CAAC,WAAW,GAAG,eAAa,IAAI,CAAC,OAAS,CAAC;QAE/C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC;QACtC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;KAC9C;;;;IAED,sCAAW;;;IAAX;QACI,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;KAC5D;;;;IAED,sCAAW;;;IAAX;QACI,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC;KAC1D;;;;IAED,gCAAK;;;IAAL;QACI,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;KACtD;;gBAhHJ,SAAS,SAAC;oBACP,QAAQ,EAAE,kBAAkB;oBAC5B,QAAQ,EAAE,ulGAqET;;iBAEJ;;;2BAEI,KAAK;2BACL,KAAK;;IAqCV,uBAAC;CAAA,CAvCqC,wBAAwB,GAuC7D;;;IAtCG,oCAA0B;;IAC1B,oCAA0B;;IAE1B,sCAAmB;;IACnB,uCAAoB;;IACpB,kCAAe;;IACf,qCAAkB;;IAElB,8BAAgB;;IAEhB,oCAC4H;;IAC5H,sCACkO;;IAClO,wCAC2J;;IAC3J,kCAA4B;;IAC5B,oCAAqC;;;;;;;;IC/CLA,kCAAwB;IA7C5D;QAAA,qEAgEC;QAlBY,cAAQ,GAAG,KAAK,CAAC;QAG1B,QAAE,GAAG,UAAU,CAAC;QAEhB,cAAQ,GACJ,gLAAgL,CAAC;QACrL,kBAAY,GACR,2YAA2Y,CAAC;;KAUnZ;;;;IARG,oCAAW;;;IAAX;QACI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,KAAK,CAAC;QAC5C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,KAAK,CAAC;KACnD;;;;IAED,gCAAO;;;IAAP;QACI,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC;KAC5D;;gBA/DJ,SAAS,SAAC;oBACP,QAAQ,EAAE,gBAAgB;oBAC1B,QAAQ,EAAE,6vDAwCT;;iBAEJ;;;2BAEI,KAAK;;IAkBV,qBAAC;CAAA,CAnBmC,wBAAwB,GAmB3D;;;IAlBG,kCAA0B;;IAC1B,gCAAe;;IACf,oCAAmB;;IACnB,4BAAgB;;IAEhB,kCACqL;;IACrL,sCACgZ;;;;;;;;ICClXA,gCAAwB;IAvD1D;QAAA,qEAkIC;QA1EY,UAAI,GAAG,EAAE,CAAC;QACV,cAAQ,GAAG,KAAK,CAAC;QAE1B,QAAE,GAAG,UAAU,CAAC;QAKhB,gBAAU,GAAG,CAAC,CAAC;;QAIf,aAAO,GAAG,EAAE,CAAC;QACb,aAAO,GAAG,EAAE,CAAC;;QAGb,sBAAgB,GAAG,EAAE,CAAC;;KA0DzB;;;;IAnDG,8BAAO;;;IAAP;QACI,OAAO,6BAA0B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,GAAG,CAAC,YACxE,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,SAClD,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,MAAG,CAAC;KAC7D;;;;IAED,kCAAW;;;IAAX;QACI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC/D,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3F,IAAI,CAAC,gBAAgB,GAAG,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC;QAC7C,IAAI,CAAC,gBAAgB,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC;QAC3D,IAAI,CAAC,gBAAgB,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QACzC,IAAI,IAAI,CAAC,gBAAgB,KAAK,CAAC,EAAE;YAC7B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;SAC7B;QAED,IAAI,CAAC,WAAW,GAAG,WACrB,IAAI,CAAC,OAAO,UAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,eACpD,IAAI,CAAC,gBAAgB,SAAI,IAAI,CAAC,gBAAgB,eAAU,IAAI,CAAC,OAAO,UAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,eAC5G,IAAI,CAAC,gBAAgB,SAAI,IAAI,CAAC,gBAAgB,eAAU,IAAI,CAAC,OAAO,UAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,oBAE5G,IAAI,CAAC,OAAO,UAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,eACpD,IAAI,CAAC,gBAAgB,SAAI,IAAI,CAAC,gBAAgB,eAAU,IAAI,CAAC,OAAO,UAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,eAC5G,IAAI,CAAC,gBAAgB,SAAI,IAAI,CAAC,gBAAgB,eAAU,IAAI,CAAC,OAAO,UAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,oBAE5G,IAAI,CAAC,OAAO,UAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,eACpD,IAAI,CAAC,gBAAgB,SAAI,IAAI,CAAC,gBAAgB,eAAU,IAAI,CAAC,OAAO,UAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,eAC5G,IAAI,CAAC,gBAAgB,SAAI,IAAI,CAAC,gBAAgB,eAAU,IAAI,CAAC,OAAO,UAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,oBAE5G,IAAI,CAAC,OAAO,UAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,eACpD,IAAI,CAAC,gBAAgB,SAAI,IAAI,CAAC,gBAAgB,eAAU,IAAI,CAAC,OAAO,UAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,eAC5G,IAAI,CAAC,gBAAgB,SAAI,IAAI,CAAC,gBAAgB,eAAU,IAAI,CAAC,OAAO,UAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,aAEjH,CAAC;QACM,IAAI,CAAC,WAAW,GAAG,SACvB,IAAI,CAAC,OAAO,UAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,aACpD,IAAI,CAAC,gBAAgB,SAAI,IAAI,CAAC,gBAAgB,eAAU,IAAI,CAAC,OAAO,UAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,aAC5G,IAAI,CAAC,gBAAgB,SAAI,IAAI,CAAC,gBAAgB,eAAU,IAAI,CAAC,OAAO,UAAI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,gBAAgB,WAE/G,CAAC;QACM,IAAI,CAAC,QAAQ,GAAG,4DAKnB,EAAE,GAAG,IAAI,CAAC,MAAM,eACjB,EAAE,GAAG,IAAI,CAAC,MAAM,WAAI,EAAE,GAAG,IAAI,CAAC,MAAM,iBAAU,EAAE,GAAG,IAAI,CAAC,MAAM,gBAChE,EAAE,GAAG,IAAI,CAAC,MAAM,WAAI,EAAE,GAAG,IAAI,CAAC,MAAM,oBAAa,EAAE,GAAG,IAAI,CAAC,MAAM,WAElE,CAAC;KACG;;gBAjIJ,SAAS,SAAC;oBACP,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE,6mEAkDT;;iBAEJ;;;uBAEI,KAAK;2BACL,KAAK;;IAyEV,mBAAC;CAAA,CA3EiC,wBAAwB,GA2EzD;;;IA1EG,4BAAmB;;IACnB,gCAA0B;;IAE1B,0BAAgB;;IAEhB,mCAAoB;;IACpB,mCAAoB;;IACpB,gCAAiB;;IACjB,kCAAe;;IACf,8BAAe;;IAGf,+BAAa;;IACb,+BAAa;;IAGb,wCAAsB;;IACtB,wCAAyB;;IAGzB,wCAAyB;;IACzB,wCAAyB;;;;;;;;ICFKA,gCAAwB;IA3E1D;QAAA,qEA4FC;QAhBY,cAAQ,GAAG,KAAK,CAAC;QAM1B,cAAQ,GACJ,uLAAuL,CAAC;;KAS/L;;;;IAPG,kCAAW;;;IAAX;QACI,IAAI,CAAC,aAAa,GAAG,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;QACtD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ;cACrB,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa,IAAI,GAAG,IAAI,EAAE,GAAG,CAAC;cAC3C,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,aAAa,IAAI,GAAG,IAAI,EAAE,GAAG,CAAC,CAAC;QAClD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,GAAG,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,aAAa,GAAG,GAAG,IAAI,EAAE,CAAC;KACvG;;gBA3FJ,SAAS,SAAC;oBACP,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE,gyGAsET;;iBAEJ;;;2BAEI,KAAK;;IAgBV,mBAAC;CAAA,CAjBiC,wBAAwB,GAiBzD;;;IAhBG,gCAA0B;;IAE1B,qCAAsB;;IACtB,8BAAe;;IACf,kCAAmB;;IAEnB,gCAC4L;;;;;;;ACvFhM;IAQA;KAKqC;;gBALpC,QAAQ,SAAC;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,YAAY,EAAE,CAAC,wBAAwB,EAAE,gBAAgB,EAAE,cAAc,EAAE,YAAY,EAAE,YAAY,CAAC;oBACtG,OAAO,EAAE,CAAC,wBAAwB,EAAE,gBAAgB,EAAE,cAAc,EAAE,YAAY,EAAE,YAAY,CAAC;iBACpG;;IACmC,4BAAC;CALrC;;;;;;;;;;;;;;"}